// <auto-generated />
using System;
using KutuphaneTakip.Repositories;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace KutuphaneTakip.Migrations
{
    [DbContext(typeof(RepositoryContext))]
    [Migration("20231229121237_test5")]
    partial class test5
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("KutuphaneTakip.Models.Adres", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Bina")
                        .HasColumnType("int");

                    b.Property<string>("Il")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Ilce")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Kat")
                        .HasColumnType("int");

                    b.Property<string>("Mahalle")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Sokak")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Adress");
                });

            modelBuilder.Entity("KutuphaneTakip.Models.Departmanlar", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Departman")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("KutuphaneId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("KutuphaneId");

                    b.ToTable("Departmanlars");
                });

            modelBuilder.Entity("KutuphaneTakip.Models.DilTurleri", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Dil")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("DilTurleris");
                });

            modelBuilder.Entity("KutuphaneTakip.Models.Erisebilirlik", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Yetki")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Erisebilirliks");
                });

            modelBuilder.Entity("KutuphaneTakip.Models.GeriBildirim", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Bildiri")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Gmail")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("KullaniciId")
                        .HasColumnType("int");

                    b.Property<int>("Sms")
                        .HasColumnType("int");

                    b.Property<int>("Tarih")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("KullaniciId");

                    b.ToTable("GeriBildirims");
                });

            modelBuilder.Entity("KutuphaneTakip.Models.KitapTurleri", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Turler")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("KitapTurleris");
                });

            modelBuilder.Entity("KutuphaneTakip.Models.Kitaplar", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("BasimTarihi")
                        .HasColumnType("int");

                    b.Property<int>("DilId")
                        .HasColumnType("int");

                    b.Property<int?>("DilTurleriId")
                        .HasColumnType("int");

                    b.Property<int>("ErisebilirlikId")
                        .HasColumnType("int");

                    b.Property<int>("GelisTarihi")
                        .HasColumnType("int");

                    b.Property<bool>("Guvenligi")
                        .HasColumnType("bit");

                    b.Property<string>("KitapAdi")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("KitapNo")
                        .HasColumnType("int");

                    b.Property<int?>("KitapTurleriId")
                        .HasColumnType("int");

                    b.Property<int>("KitapTuruId")
                        .HasColumnType("int");

                    b.Property<int>("KutuphaneId")
                        .HasColumnType("int");

                    b.Property<int>("QRKod")
                        .HasColumnType("int");

                    b.Property<int>("RafNo")
                        .HasColumnType("int");

                    b.Property<int>("SayfaSayisi")
                        .HasColumnType("int");

                    b.Property<int>("Stok")
                        .HasColumnType("int");

                    b.Property<int>("YayinEviId")
                        .HasColumnType("int");

                    b.Property<int>("YazarId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("DilTurleriId");

                    b.HasIndex("ErisebilirlikId");

                    b.HasIndex("KitapTurleriId");

                    b.HasIndex("KutuphaneId");

                    b.HasIndex("YayinEviId");

                    b.HasIndex("YazarId");

                    b.ToTable("Kitaplars");
                });

            modelBuilder.Entity("KutuphaneTakip.Models.Kullanici", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("AdresId")
                        .HasColumnType("int");

                    b.Property<int>("DepartmanId")
                        .HasColumnType("int");

                    b.Property<int?>("DepartmanlarId")
                        .HasColumnType("int");

                    b.Property<int>("ErisebilirlikId")
                        .HasColumnType("int");

                    b.Property<string>("Gmail")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("KullaniciTipiId")
                        .HasColumnType("int");

                    b.Property<int>("Telefon")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AdresId");

                    b.HasIndex("DepartmanlarId");

                    b.HasIndex("ErisebilirlikId");

                    b.HasIndex("KullaniciTipiId");

                    b.ToTable("Kullanicis");
                });

            modelBuilder.Entity("KutuphaneTakip.Models.KullaniciTipi", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Tip")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("KullaniciTipis");
                });

            modelBuilder.Entity("KutuphaneTakip.Models.Kutuphane", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("KutuphaneAdi")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Kutuphanes");
                });

            modelBuilder.Entity("KutuphaneTakip.Models.OdaTipi", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Tip")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("OdaTipis");
                });

            modelBuilder.Entity("KutuphaneTakip.Models.Odalar", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("KutuphaneId")
                        .HasColumnType("int");

                    b.Property<string>("OdaAdi")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("OdaTipiId")
                        .HasColumnType("int");

                    b.Property<int>("OdatipId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("KutuphaneId");

                    b.HasIndex("OdaTipiId");

                    b.ToTable("Odalars");
                });

            modelBuilder.Entity("KutuphaneTakip.Models.OduncDurumlari", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Durum")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("OduncDurumlaris");
                });

            modelBuilder.Entity("KutuphaneTakip.Models.OduncVerilenAyar", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("GetirmeSiniri")
                        .HasColumnType("int");

                    b.Property<int>("KutuphaneId")
                        .HasColumnType("int");

                    b.Property<int>("UzatmaSiniri")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("KutuphaneId");

                    b.ToTable("OduncVerilenAyars");
                });

            modelBuilder.Entity("KutuphaneTakip.Models.OduncVerilenKitaplar", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("AlindigiTarih")
                        .HasColumnType("int");

                    b.Property<string>("Cezasi")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("DurumId")
                        .HasColumnType("int");

                    b.Property<bool>("Guvenlik")
                        .HasColumnType("bit");

                    b.Property<int>("KalanZaman")
                        .HasColumnType("int");

                    b.Property<string>("KitapAdi")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("KitaplarId")
                        .HasColumnType("int");

                    b.Property<string>("KullaniciAdi")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("KullaniciId")
                        .HasColumnType("int");

                    b.Property<int>("KıtapId")
                        .HasColumnType("int");

                    b.Property<int?>("OduncDurumlariId")
                        .HasColumnType("int");

                    b.Property<int>("VerilecegiTarih")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("KitaplarId");

                    b.HasIndex("KullaniciId");

                    b.HasIndex("OduncDurumlariId");

                    b.ToTable("OduncVerilenKitaplars");
                });

            modelBuilder.Entity("KutuphaneTakip.Models.Rezervasyon", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Gmail")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Gun")
                        .HasColumnType("int");

                    b.Property<string>("KullaniciAdi")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("KullaniciId")
                        .HasColumnType("int");

                    b.Property<int>("KutuphaneId")
                        .HasColumnType("int");

                    b.Property<int>("Masa")
                        .HasColumnType("int");

                    b.Property<int>("Oda")
                        .HasColumnType("int");

                    b.Property<int>("Saat")
                        .HasColumnType("int");

                    b.Property<int>("Telefon")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("KullaniciId");

                    b.HasIndex("KutuphaneId");

                    b.ToTable("Rezervasyons");
                });

            modelBuilder.Entity("KutuphaneTakip.Models.Yayinevi", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("YayineviAdi")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Yayinevis");
                });

            modelBuilder.Entity("KutuphaneTakip.Models.Yazar", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("YazarAdi")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Yazars");
                });

            modelBuilder.Entity("KutuphaneTakip.Models.Departmanlar", b =>
                {
                    b.HasOne("KutuphaneTakip.Models.Kutuphane", "Kutuphane")
                        .WithMany("Departmanlars")
                        .HasForeignKey("KutuphaneId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Kutuphane");
                });

            modelBuilder.Entity("KutuphaneTakip.Models.GeriBildirim", b =>
                {
                    b.HasOne("KutuphaneTakip.Models.Kullanici", "Kullanici")
                        .WithMany("Geribildirims")
                        .HasForeignKey("KullaniciId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Kullanici");
                });

            modelBuilder.Entity("KutuphaneTakip.Models.Kitaplar", b =>
                {
                    b.HasOne("KutuphaneTakip.Models.DilTurleri", "DilTurleri")
                        .WithMany("Kitaplars")
                        .HasForeignKey("DilTurleriId");

                    b.HasOne("KutuphaneTakip.Models.Erisebilirlik", "Erisebilirlik")
                        .WithMany("Kitaplars")
                        .HasForeignKey("ErisebilirlikId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("KutuphaneTakip.Models.KitapTurleri", "KitapTurleri")
                        .WithMany("Kitaplars")
                        .HasForeignKey("KitapTurleriId");

                    b.HasOne("KutuphaneTakip.Models.Kutuphane", "Kutuphane")
                        .WithMany("Kitaplars")
                        .HasForeignKey("KutuphaneId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("KutuphaneTakip.Models.Yayinevi", "Yayinevi")
                        .WithMany("Kitaplars")
                        .HasForeignKey("YayinEviId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("KutuphaneTakip.Models.Yazar", "Yazar")
                        .WithMany("Kitaplars")
                        .HasForeignKey("YazarId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("DilTurleri");

                    b.Navigation("Erisebilirlik");

                    b.Navigation("KitapTurleri");

                    b.Navigation("Kutuphane");

                    b.Navigation("Yayinevi");

                    b.Navigation("Yazar");
                });

            modelBuilder.Entity("KutuphaneTakip.Models.Kullanici", b =>
                {
                    b.HasOne("KutuphaneTakip.Models.Adres", "Adres")
                        .WithMany("Kullanicis")
                        .HasForeignKey("AdresId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("KutuphaneTakip.Models.Departmanlar", "Departmanlar")
                        .WithMany("Kullanicis")
                        .HasForeignKey("DepartmanlarId");

                    b.HasOne("KutuphaneTakip.Models.Erisebilirlik", "Erisebilirlik")
                        .WithMany("Kullanicis")
                        .HasForeignKey("ErisebilirlikId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("KutuphaneTakip.Models.KullaniciTipi", "KullaniciTipi")
                        .WithMany("Kullanicis")
                        .HasForeignKey("KullaniciTipiId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Adres");

                    b.Navigation("Departmanlar");

                    b.Navigation("Erisebilirlik");

                    b.Navigation("KullaniciTipi");
                });

            modelBuilder.Entity("KutuphaneTakip.Models.Odalar", b =>
                {
                    b.HasOne("KutuphaneTakip.Models.Kutuphane", "Kutuphane")
                        .WithMany("Odalars")
                        .HasForeignKey("KutuphaneId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("KutuphaneTakip.Models.OdaTipi", "OdaTipi")
                        .WithMany("Odalars")
                        .HasForeignKey("OdaTipiId");

                    b.Navigation("Kutuphane");

                    b.Navigation("OdaTipi");
                });

            modelBuilder.Entity("KutuphaneTakip.Models.OduncVerilenAyar", b =>
                {
                    b.HasOne("KutuphaneTakip.Models.Kutuphane", "Kutuphane")
                        .WithMany("OduncVerilenAyars")
                        .HasForeignKey("KutuphaneId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Kutuphane");
                });

            modelBuilder.Entity("KutuphaneTakip.Models.OduncVerilenKitaplar", b =>
                {
                    b.HasOne("KutuphaneTakip.Models.Kitaplar", "Kitaplar")
                        .WithMany("OduncVerilenKitaplars")
                        .HasForeignKey("KitaplarId");

                    b.HasOne("KutuphaneTakip.Models.Kullanici", "Kullanici")
                        .WithMany("OduncVerilenKitaplars")
                        .HasForeignKey("KullaniciId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("KutuphaneTakip.Models.OduncDurumlari", "OduncDurumlari")
                        .WithMany("OduncVerilenKitaplars")
                        .HasForeignKey("OduncDurumlariId");

                    b.Navigation("Kitaplar");

                    b.Navigation("Kullanici");

                    b.Navigation("OduncDurumlari");
                });

            modelBuilder.Entity("KutuphaneTakip.Models.Rezervasyon", b =>
                {
                    b.HasOne("KutuphaneTakip.Models.Kullanici", "Kullanici")
                        .WithMany("Rezervasyons")
                        .HasForeignKey("KullaniciId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("KutuphaneTakip.Models.Kutuphane", "Kutuphane")
                        .WithMany("Rezervasyons")
                        .HasForeignKey("KutuphaneId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Kullanici");

                    b.Navigation("Kutuphane");
                });

            modelBuilder.Entity("KutuphaneTakip.Models.Adres", b =>
                {
                    b.Navigation("Kullanicis");
                });

            modelBuilder.Entity("KutuphaneTakip.Models.Departmanlar", b =>
                {
                    b.Navigation("Kullanicis");
                });

            modelBuilder.Entity("KutuphaneTakip.Models.DilTurleri", b =>
                {
                    b.Navigation("Kitaplars");
                });

            modelBuilder.Entity("KutuphaneTakip.Models.Erisebilirlik", b =>
                {
                    b.Navigation("Kitaplars");

                    b.Navigation("Kullanicis");
                });

            modelBuilder.Entity("KutuphaneTakip.Models.KitapTurleri", b =>
                {
                    b.Navigation("Kitaplars");
                });

            modelBuilder.Entity("KutuphaneTakip.Models.Kitaplar", b =>
                {
                    b.Navigation("OduncVerilenKitaplars");
                });

            modelBuilder.Entity("KutuphaneTakip.Models.Kullanici", b =>
                {
                    b.Navigation("Geribildirims");

                    b.Navigation("OduncVerilenKitaplars");

                    b.Navigation("Rezervasyons");
                });

            modelBuilder.Entity("KutuphaneTakip.Models.KullaniciTipi", b =>
                {
                    b.Navigation("Kullanicis");
                });

            modelBuilder.Entity("KutuphaneTakip.Models.Kutuphane", b =>
                {
                    b.Navigation("Departmanlars");

                    b.Navigation("Kitaplars");

                    b.Navigation("Odalars");

                    b.Navigation("OduncVerilenAyars");

                    b.Navigation("Rezervasyons");
                });

            modelBuilder.Entity("KutuphaneTakip.Models.OdaTipi", b =>
                {
                    b.Navigation("Odalars");
                });

            modelBuilder.Entity("KutuphaneTakip.Models.OduncDurumlari", b =>
                {
                    b.Navigation("OduncVerilenKitaplars");
                });

            modelBuilder.Entity("KutuphaneTakip.Models.Yayinevi", b =>
                {
                    b.Navigation("Kitaplars");
                });

            modelBuilder.Entity("KutuphaneTakip.Models.Yazar", b =>
                {
                    b.Navigation("Kitaplars");
                });
#pragma warning restore 612, 618
        }
    }
}
